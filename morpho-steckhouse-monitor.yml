name: Morpho Steckhouse Monitor

on:
  schedule:
    - cron: '0 7 * * *'  # Ogni giorno alle 9:00 italiane
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl bc

      - name: Check APY & Update CSV
        run: |
          VAULT_ADDRESS="0x9a615cb3e9fa9e75070e5df5a75df6f2a75ed130"
          WALLET="0x6bD872Ef0749eBa102A9e7Cd9FC24Ed2A5C88679"
          DATE=$(date +'%Y-%m-%d')

          echo "ðŸ“¡ Interrogazione Morpho GraphQL..."
          RESPONSE=$(curl -s -X POST https://api.morpho.org/graphql \
            -H "Content-Type: application/json" \
            -d '{
              "query": "query { vaultByAddress(address: \"'$VAULT_ADDRESS'\") { state { totalAssetsUsd totalSupply rewards { apr } allocation { market { state { supplyApr } } } } } }"
            }')

          BASE_APR=$(echo "$RESPONSE" | jq -r '.data.vaultByAddress.state.allocation.market.state.supplyApr')
          REWARD_APR=$(echo "$RESPONSE" | jq -r '.data.vaultByAddress.state.rewards[0].apr')
          APY=$(echo "$BASE_APR + $REWARD_APR" | bc -l)
          APY_DISPLAY=$(echo "$APY * 100" | bc -l | awk '{printf "%.2f", $1}')
          echo "APY calcolato: $APY_DISPLAY%"

          BALANCE=$(curl -s "https://api.llama.fi/protocol/morpho-blue" | jq -r '.tvl')
          echo "Saldo attuale stimato: $BALANCE USD"

          PREV_BALANCE="0.00"
          if [ -f history.csv ]; then
            PREV_BALANCE=$(tail -n 1 history.csv | cut -d',' -f3)
          fi

          GAIN=$(echo "$BALANCE - $PREV_BALANCE" | bc -l | awk '{printf "%.2f", $1}')
          echo "$DATE,$APY_DISPLAY,$BALANCE" >> history.csv

          MSG="ðŸ“Š *Morpho Steckhouse USDT â€“ Report $DATE*\nSaldo: *$BALANCE USD*\nAPY: *$APY_DISPLAY%*\nProfitto da ieri: *$GAIN USD*"
          echo "Messaggio Telegram:\n$MSG"

          curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d chat_id=${{ secrets.CHAT_ID }} \
            -d text="$MSG" \
            -d parse_mode="Markdown"

      - name: Commit storico
        run: |
          git config user.name "bot"
          git config user.email "bot@example.com"
          git pull --rebase
          git add history.csv
          git commit -m "Aggiornamento storico $DATE" || echo "Nessuna modifica"
          git push
