name: Morpho Steakhouse Telegram

on:
  schedule:
    - cron: "0 7 * * *"  # ogni giorno alle 07:00 UTC
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Python dependencies
        run: pip install requests

      - name: Fetch Morpho vault data and notify Telegram
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python << 'EOF'
          import requests, os, sys, json

          BOT_TOKEN = os.environ['BOT_TOKEN']
          CHAT_ID = os.environ['CHAT_ID']

          vault_id = "0xbEef047a543E45807105E51A8BBEFCc5950fcfba"
          query = f"""
          query {{
            vault(id: "{vault_id}") {{
              name
              apy
              totalAssets
            }}
          }}
          """
          r = requests.post(
              "https://api.morpho.org/graphql",
              json={"query": query},
              headers={"Content-Type": "application/json"}
          )

          try:
              resp = r.json()
          except Exception:
              print("Risposta non JSON:", r.text)
              sys.exit(1)

          if "errors" in resp:
              print("Errore GraphQL:", json.dumps(resp["errors"], indent=2))
              sys.exit(1)

          vault = resp.get("data", {}).get("vault")
          if not vault:
              print("Vault non trovato nella risposta:", resp)
              sys.exit(1)

          apy = float(vault["apy"]) * 100
          tvl = float(vault["totalAssets"]) / 1e6  # milioni di USDT

          message = (
              f"ðŸ“Š Morpho â€“ {vault['name']}\n"
              f"TVL: {tvl:.2f} M USDT\n"
              f"APY: {apy:.2f}%"
          )

          telegram_url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
          res = requests.post(telegram_url, json={"chat_id": CHAT_ID, "text": message})

          if res.status_code != 200:
              print("Errore invio Telegram:", res.text)
              sys.exit(1)

          print("âœ… Messaggio inviato:", message)
          EOF
